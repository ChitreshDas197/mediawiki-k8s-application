apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  labels:
    name: mysql-secret
    app: mysql-aks-deployment
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: #put your base64 encoded password for root user of MySQL (can integrated secret management solutions)
  MYSQL_PASSWORD: #put your base64 encoded password for the db user created for mediawiki app (can integrated secret management solutions)


# If using secret management solutions like Azure Keyvault, no need to create this Secret Object. You can use SecretProviderClass;
# This is a Custom Resource Definition which will use the azure-keyvault-secret-provider addon for the AKS cluster
# This will create pods within kube-system namespace which will work as the CSI drivers
# You can create the SecretProviderClass definition to use api secret-store.csi.x-k8s.io/v1
# This requires a managed identity (Self or System) for the Azure VM Scale Set to have access policy assigned on the key vault and the secret
# Create the Deployment definition and mount a volume in the Pod by creating a Volume from this SecretProviderSClass
# This will dynamically create the secret object to which the POD will have access
# You would also need to define a secret object within the SecretProviderClass